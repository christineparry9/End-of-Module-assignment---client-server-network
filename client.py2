import socket
import pickle
import json
import os
import xml.etree.ElementTree as ET
from cryptography.fernet import Fernet


def start_client():
    # Initialize socket
    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    client_socket.connect(('localhost', 12345))

    # Create and populate a dictionary
    data_dict = {'name': 'Christine', 'age': 35, 'city': 'London'}

    # Serialize the dictionary
    format_choice = input("Choose the pickling format (binary, JSON, XML): ")
    if format_choice == "binary":
        serialized_data = b'b' + pickle.dumps(data_dict)
    elif format_choice == "JSON":
        serialized_data = b'j' + json.dumps(data_dict).encode('utf-8')
    elif format_choice == "XML":
        root = ET.Element("root")
        for key, value in data_dict.items():
            ET.SubElement(root, key).text = str(value)
        serialized_data = b'x' + ET.tostring(root, encoding='utf-8')

    # Send the serialized dictionary to the server
    client_socket.sendall(serialized_data)
    print("Dictionary has been sent")

    # Get the txt file to send
    file = open('sample_file.txt', 'rb')

    # Get the size of the txt file
    size = os.path.getsize('sample_file.txt')

    # Send all data to receiver
    data = file.read()

    # Encrypt the text file before sending it to server
    encrypt_option = input("Do you want to encrypt the text file? (yes/no): ")
    if encrypt_option.lower() == "yes":
        # Use a preset key for encryption
        key = b'oLLcRVDpd5bqyGLlgGrMi4ARU8uoH01UNEX32hrY-Do='  # Replace with your preset key
        cipher_suite = Fernet(key)
        data = cipher_suite.encrypt(data)

    client_socket.sendall(data)
    print("File has been sent.")
    client_socket.close()


if _name_ == "_main_":
    start_client()
